---
import { Image } from 'astro:assets';
import H1 from "../components/h1.astro";
import InfoLayout from "../layouts/InfoLayout.astro";
import imageInpainting from "../assets/image-inpainting.png";
import MindfulLibrary from "../assets/MindfulLibrary.png";
import FluidPropulsion from "../assets/fluid-propulsion.jpg";
import ElectricMotor from "../assets/electro-magnetic-motor.jpg";

const projects = [
     {
          title: "MindfulLibrary",
          description: "Transform mechanical energy into alternating current, powering the modern electric grid. This project demonstrates principles of electromagnetism and rotational dynamics.",
          image: MindfulLibrary,
          frameLabel: "ML LIBRARY"
     },
     {
          title: "Fluid Propulsion",
          description: "A proof-of-concept bladeless turbine that uses principles of fluid dynamics for efficient, low-friction propulsion. Ideal for silent and eco-friendly marine applications.",
          image: imageInpainting,
          frameLabel: "PROPULSION SYS"
     },
     {
      title: "More Projects Coming Soon",
      description: "Currently working on exciting new projects including machine learning applications, IoT systems, and advanced engineering solutions. Stay tuned for updates!",
      image: "",
      frameLabel: "UPCOMING"
     }
     /* {
          title: "Electro-Magnetic Motor",
          description: "Harnessing the power of alternating current to produce smooth and efficient rotary motion. This motor is a cornerstone of modern industrial and home appliances.",
          image: ElectricMotor
     } */];

// Timeline projects data
const PROJECTS = [
     {
          title: "MindfulLibrary",
          description: "AI-powered semantic book recommender based on mood, tone, and interests using Python, Pandas, NumPy, TF-IDF, NLP, and Gradio.",
          date: "2024",
          tags: ["Python", "AI/ML", "NLP", "Gradio", "TF-IDF"]
     },
     {
          title: "Chicken Disease Classification",
          description: "Web app for detecting chicken disease (coccidiosis in poultry) from fecal images using deep learning, Docker, AWS, and Streamlit.",
          date: "2024",
          tags: ["Deep Learning", "Docker", "AWS", "Streamlit", "Computer Vision"]
     },
     {
          title: "Image Inpainting Tool",
          description: "Desktop GUI to apply stable diffusion inpainting using image segmentation with OpenCV, PyQt5, GrabCut, and Stable Diffusion.",
          date: "2024",
          tags: ["OpenCV", "PyQt5", "Stable Diffusion", "Computer Vision"]
     },
     {
          title: "Solar Panel Detection & Segmentation",
          description: "Two-stage CV pipeline using YOLOv11 & SAM for rooftop solar panel mapping from satellite images at ISRO SAC.",
          date: "2025",
          tags: ["YOLOv11", "SAM", "PyTorch", "GeoPandas", "Satellite Imagery"]
     }
];
---

<InfoLayout>
  <div class="p-4 sm:pt-8 sm:px-12 pb-20">
    <H1> Projects </H1>

    <div class="projects-container mt-4 sm:mt-3">

      <div class="project-images">
        <ul>
          {projects.map((project, index) => (
            <li class="project-image-item" data-index={index}>
              
              <div class="project-frame">
                <div class="frame-header">
                  <span class="frame-label">{project.frameLabel}</span>
                  <span class="frame-hex">0x0{index + 1}</span>
                </div>
                
                
                {project.image && typeof project.image !== 'string' ? (
                  <Image src={project.image} alt={project.title} class="project-img" />
                ) : (
                  <div class="coming-soon-placeholder">
                    <div class="placeholder-content">
                      <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" class="placeholder-icon">
                        <path d="M12 2v20M2 12h20"/>
                      </svg>
                      <span class="placeholder-text">Coming Soon</span>
                    </div>
                  </div>
                )}

                <div class="frame-corners">
                  <span class="corner top-left"></span>
                  <span class="corner top-right"></span>
                  <span class="corner bottom-left"></span>
                  <span class="corner bottom-right"></span>
                </div>
              </div>

              <div class="project-text-mobile">
                <h2 class="text-base font-semibold text-zinc-100 mt-4">{project.title}</h2>
                <p class="text-sm text-zinc-400 text-balance mt-1">{project.description}</p>
              </div>
            </li>
          ))}
        </ul>
      </div>

      <div class="project-details">
        <div class="sticky-content">
          <h2 id="project-title" class="text-2xl lg:text-3xl font-bold text-zinc-100">
            {/* Content updated by JS */}
          </h2>
          <p id="project-description" class="text-zinc-400 mt-4 text-balance leading-relaxed">
            {/* Content updated by JS */}
          </p>
        </div>
      </div>

    </div>

    <!-- Timeline Section -->
    <section class="mt-12">
      <ol class="relative border-s border-neutral-700">
        {
          PROJECTS.map((project) => (
            <li class="mb-10 ms-6">
              <span class="absolute flex items-center justify-center w-3 h-3 bg-neutral-500 rounded-full -start-[6.5px] ring-4 ring-neutral-950">
              </span>
              <time class="mb-1 text-sm font-normal leading-none text-neutral-400">
                {project.date}
              </time>
              <h3 class="text-lg font-semibold text-neutral-50">
                {project.title}
              </h3>
              <p class="mb-4 text-base font-normal text-neutral-400">
                {project.description}
              </p>
              <div class="flex flex-wrap gap-2">
                {project.tags.map((tag) => (
                  <span class="bg-neutral-800 text-neutral-50 text-xs font-medium me-2 px-2.5 py-0.5 rounded-full">
                    {tag}
                  </span>
                ))}
              </div>
            </li>
          ))
        }
      </ol>
    </section>
  </div>
</InfoLayout>

<style>
  /* --- Desktop-First Styles (for screens > 1024px) --- */
  .projects-container {
    display: grid;
    grid-template-columns: 1.2fr 0.8fr;
    gap: 3rem;
  }
  
  .project-details {
    padding-left: 2rem;
    margin-left: auto;
    max-width: 90%;
  }
  
  /* REVERTED: Removed scroll-snap container styles */
  .project-images {
    /* Back to a simple container */
  }

  .project-images ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    /* REVERTED: Added gap back for spacing */
    gap: 4rem; 
  }

  /* REVERTED: Back to min-height for free scrolling */
  .project-image-item {
    min-height: 80vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  
  /* Glassmorphism card design - matching your reference screenshots */
  .project-frame {
    position: relative;
    border: 1px solid rgba(255, 255, 255, 0.15);
    border-radius: 20px;
    padding: 0;
    background: linear-gradient(135deg, 
      rgba(11, 11, 11, 0.1) 0%,
      rgba(0, 0, 0, 0.08) 25%,
      rgba(0, 0, 0, 0.06) 50%,
      rgba(0, 0, 0, 0.08) 75%,
      rgba(4, 4, 4, 0.1) 100%
    );
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    width: 110%;
    max-width: 1000px;
    aspect-ratio: 16 / 10;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 
      0 8px 32px rgba(0, 0, 0, 0.3),
      inset 0 1px 0 rgba(255, 255, 255, 0.1),
      0 0 0 1px rgba(255, 255, 255, 0.05);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
  }

  .project-frame::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 20px;
    padding: 1px;
    background: linear-gradient(135deg, 
      rgba(255, 255, 255, 0.2) 0%,
      rgba(255, 255, 255, 0.05) 50%,
      rgba(255, 255, 255, 0.1) 100%
    );
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: subtract;
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: subtract;
  }

  .project-frame:hover {
    transform: translateY(-4px) scale(1.02);
    border-color: hsla(0, 0%, 99%, 0.6);
    background: linear-gradient(135deg, 
      rgba(24, 24, 27, 0.9) 0%,
      rgba(39, 39, 42, 0.8) 25%,
      rgba(63, 63, 70, 0.7) 50%,
      rgba(82, 82, 91, 0.8) 75%,
      rgba(113, 113, 122, 0.9) 100%
    );
    box-shadow: 
      0 16px 64px rgba(0, 0, 0, 0.6),
      inset 0 1px 0 rgba(255, 255, 255, 0.1),
      0 0 0 1px hsla(0, 0%, 85%, 0.3),
      0 0 20px hsla(0, 0%, 100%, 0.2);
  }

  .project-img {
    width: calc(100% - 90px);
    height: calc(100% - 90px);
    object-fit: cover;
    border-radius: 16px;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
    margin-top: 90px;
  }

  .project-frame:hover .project-img {
    transform: scale(1) rotate(-3deg);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  }

  .coming-soon-placeholder {
    width: calc(100% - 90px);
    height: calc(100% - 90px);
    margin-top: 90px;
    border-radius: 16px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, 
      rgba(24, 24, 27, 0.8) 0%,
      rgba(39, 39, 42, 0.6) 50%,
      rgba(63, 63, 70, 0.8) 100%
    );
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .placeholder-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    color: rgba(255, 255, 255, 0.6);
  }

  .placeholder-icon {
    width: 48px;
    height: 48px;
    color: rgba(255, 255, 255, 0.4);
    animation: pulse 2s infinite;
  }

  .placeholder-text {
    font-size: 1rem;
    font-weight: 500;
    letter-spacing: 0.5px;
    text-transform: uppercase;
  }

  @keyframes pulse {
    0%, 100% { opacity: 0.4; }
    50% { opacity: 0.8; }
  }

  .project-frame:hover .coming-soon-placeholder {
    background: linear-gradient(135deg, 
      rgba(34, 34, 37, 0.9) 0%,
      rgba(49, 49, 52, 0.7) 50%,
      rgba(73, 73, 80, 0.9) 100%
    );
    border-color: rgba(255, 255, 255, 0.2);
  }

  .project-frame:hover .placeholder-content {
    color: rgba(255, 255, 255, 0.8);
  }

  .project-frame:hover .placeholder-icon {
    color: rgba(255, 255, 255, 0.6);
  }

  .frame-header {
    position: absolute;
    top: 20px;
    left: 20px;
    right: 20px;
    padding: 20px 16px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
    font-size: 0.7rem;
    font-weight: 600;
    color: rgba(255, 255, 255, 0.9);
    text-transform: uppercase;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.15);
    z-index: 2;
    letter-spacing: 0.8px;
    box-shadow: 
      0 4px 16px rgba(0, 0, 0, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.2);
  }

  .frame-subheader {
    position: absolute;
    top: 70px;
    left: 20px;
    right: 20px;
    padding: 8px 16px;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
    font-size: 0.6rem;
    font-weight: 500;
    color: rgba(255, 255, 255, 0.7);
    text-transform: uppercase;
    background: rgba(0, 0, 0, 0.2);
    border-radius: 8px;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    z-index: 2;
    letter-spacing: 0.5px;
    text-align: center;
    box-shadow: 
      0 2px 8px rgba(0, 0, 0, 0.2),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }

  .frame-description {
    font-style: italic;
    color: rgba(255, 255, 255, 0.6);
  }

  /* Clean design - no corner decorations needed */
  .frame-corners {
    display:inline-block;
  }
  
  .project-text-mobile {
      display: none;
  }

  .sticky-content {
    position: sticky;
    top: 50%;
    transform: translateY(-50%);
    transition: opacity 0.15s ease-in-out;
  }
  
  .sticky-content.is-updating {
    opacity: 0;
  }
  
  /* --- Mobile & Tablet Styles (for screens <= 1024px) --- */
  @media (max-width: 1023px) {
    .projects-container {
      grid-template-columns: 1fr;
    }
    .project-details {
      display: none;
    }
    .project-images ul {
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 2rem;
    }
    .project-image-item {
      min-height: auto;
    }
    .project-text-mobile {
      display: block;
    }
    .project-frame {
        /* On mobile, we can still show the frame, it just won't be part of the scrollytelling */
    }
  }
</style>

<script define:vars={{ projects }}>
  // This JavaScript does not need to be changed.
  document.addEventListener('DOMContentLoaded', () => {
    const titleEl = document.getElementById('project-title');
    const descriptionEl = document.getElementById('project-description');
    const imageItems = document.querySelectorAll('.project-image-item');
    const stickyContent = document.querySelector('.sticky-content');

    if (!titleEl || !descriptionEl || !stickyContent || imageItems.length === 0) {
      console.error("Project script aborted: one or more required elements were not found.");
      return;
    }
    
    let currentActiveIndex = -1;

    const observerCallback = (entries) => {
      entries.forEach(entry => {
        const index = parseInt(entry.target.dataset.index, 10);

        if (entry.isIntersecting && index !== currentActiveIndex) {
          const projectData = projects[index];

          if (projectData) {
            currentActiveIndex = index;
            stickyContent.classList.add('is-updating');
            
            setTimeout(() => {
              titleEl.textContent = projectData.title;
              descriptionEl.textContent = projectData.description;
              stickyContent.classList.remove('is-updating');
            }, 150);
          }
        }
      });
    };

    const observer = new IntersectionObserver(observerCallback, {
      root: null, 
      threshold: 0.6,
    });

    imageItems.forEach(item => {
      observer.observe(item);
    });

    if (projects.length > 0) {
        titleEl.textContent = projects[0].title;
        descriptionEl.textContent = projects[0].description;
        currentActiveIndex = 0;
    }
  });
</script>